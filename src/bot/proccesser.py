from datetime import datetime

from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup

from config.const import PersonalDataStates, AdminStates, MESSAGES, AGE_MAX, AGE_MIN
from .globals import dp
from src.database.operations import get_or_create_user, update_user


@dp.message(PersonalDataStates.waiting_for_name)
async def process_name(message: Message, state: FSMContext):
    name_parts = message.text.strip().split()
    if len(name_parts) < 2:
        await message.answer(MESSAGES["name_input_call"])
        return

    first_name = name_parts[0]
    last_name = " ".join(name_parts[1:])

    if len(first_name) < 2 or len(last_name) < 2:
        await message.answer(MESSAGES["name_input_format_error"])
        return

    await state.update_data(first_name=first_name, last_name=last_name)
    await message.answer(
        f"‚úÖ –ò–º—è: <b>{first_name} {last_name}</b>\n\n"
        f"2Ô∏è‚É£ –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç. –≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞.\n\n"
        f"üìù –®–∞–≥: 2 / 2"
    )
    await state.set_state(PersonalDataStates.waiting_for_age)


@dp.message(PersonalDataStates.waiting_for_age)
async def process_age(message: Message, state: FSMContext):
    try:
        age = int(message.text.strip())
        if age < AGE_MIN or age > AGE_MAX:
            await message.answer(
                f"‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (–æ—Ç {AGE_MIN} –¥–æ {AGE_MAX} –ª–µ—Ç)"
            )
            return
    except ValueError:
        await message.answer(MESSAGES["age_type_error"])
        return

    data = await state.get_data()

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await get_or_create_user(
        user_id=message.from_user.id,
        username=message.from_user.username,
        first_name=data["first_name"],
        last_name=data["last_name"],
    )

    await update_user(
        user_id=message.from_user.id,
        first_name=data["first_name"],
        last_name=data["last_name"],
        age=age,
        task_start=datetime.now(),
    )

    await state.clear()

    await message.answer(
        f"‚úÖ <b>–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!</b>\n\n"
        f"üë§ –ò–º—è: {data['first_name']} {data['last_name']}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {age} –ª–µ—Ç\n\n"
        f"–ú—ã —Å–æ–∑–¥–∞—ë–º –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–º–µ–Ω–Ω–æ –ø–æ–¥ –≤–∞—Å.\n\n"
        f"–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ç—Ä–∏ —Ç–µ—Å—Ç–∞. –¢–∞–º –Ω–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî –æ—Ç–≤–µ—á–∞–π—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏—Å–∫—Ä–µ–Ω–Ω–µ.\n\n"
        f"–ï—Å–ª–∏ –≥–æ—Ç–æ–≤—ã ‚Äî –Ω–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ù–∞—á–∞—Ç—å¬ª.",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text=MESSAGES["button_start"], callback_data="start_tasks"
                    )
                ]
            ]
        ),
    )


@dp.message(AdminStates.waiting_for_senler_link)
async def process_admin_senler_link(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—Å—ã–ª–∫–∏ Senler –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏–Ω
    from config.settings import ADMIN_USER_ID

    if message.from_user.id != ADMIN_USER_ID:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è")
        await state.clear()
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    target_user_id = data.get("target_user_id")

    if not target_user_id:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        await state.clear()
        return

    senler_link = message.text.strip()

    # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏
    if not senler_link.startswith(("http://", "https://")):
        await message.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É (–¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://)"
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É, –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞
    from sqlalchemy import select, update as sql_update
    from src.database.models import AsyncSessionLocal, User

    async with AsyncSessionLocal() as db_session:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        result = await db_session.execute(
            select(User).where(User.user_id == target_user_id)
        )
        user = result.scalar_one_or_none()

        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            await state.clear()
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É
        await db_session.execute(
            sql_update(User)
            .where(User.user_id == target_user_id)
            .values(admin_senler_link=senler_link)
        )
        await db_session.commit()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    if user.admin_link_send_time:
        send_time_text = user.admin_link_send_time.strftime("%d.%m.%Y %H:%M:%S")
        await message.answer(
            f"‚úÖ <b>–°—Å—ã–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!</b>\n\n"
            f"üîó –°—Å—ã–ª–∫–∞: {senler_link}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {target_user_id}\n"
            f"üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ: {send_time_text}\n\n"
            f"–°—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è."
        )
    else:
        await message.answer(
            f"‚úÖ <b>–°—Å—ã–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!</b>\n\n"
            f"üîó –°—Å—ã–ª–∫–∞: {senler_link}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {target_user_id}\n\n"
            f"‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏. "
            f"–í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª —Ç–µ—Å—Ç—ã –∏–ª–∏ –ø—Ä–∏—à–µ–ª –∏–∑ Senler."
        )

    await state.clear()
