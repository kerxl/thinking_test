"""
–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ webhook —Ä–µ–∂–∏–º–µ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å ngrok
–í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ ngrok http 8000 –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
"""

import asyncio
import json
import logging
import uvicorn
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from config.const import TaskEntity, MESSAGES
from config.settings import DEBUG
from src.database.operations import init_db
from src.bot.globals import bot, task_manager
from src.api.server import app
from src.core.scheduler import link_scheduler

# –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–æ–≤
from src.bot import handler
from src.bot import callback
from src.bot import proccesser
from src.bot import fallback  # Fallback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏)

logging.basicConfig(
    level=logging.INFO if DEBUG else logging.WARNING,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
)
logger = logging.getLogger(__name__)

# –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® NGROK URL!
NGROK_URL = "https://8224dace9452.ngrok-free.app"


async def setup_local_webhook_bot():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ ngrok webhook"""
    try:
        await init_db()
        await TaskEntity.priorities.value.load_questions()
        await TaskEntity.inq.value.load_questions()
        await TaskEntity.epi.value.load_questions()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å—Å—ã–ª–æ–∫
        await link_scheduler.start()

        logger.info("ü§ñ Telegram –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ webhook —Ä–µ–∂–∏–º–∞")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ NGROK_URL –∏–∑–º–µ–Ω–µ–Ω
        if "YOUR_NGROK_URL" in NGROK_URL:
            logger.error("‚ùå –û–®–ò–ë–ö–ê: –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_NGROK_URL –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ngrok URL!")
            logger.error("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ngrok http 8000")
            logger.error("   2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ HTTPS URL –∏–∑ –≤—ã–≤–æ–¥–∞ ngrok")
            logger.error("   3. –ó–∞–º–µ–Ω–∏—Ç–µ NGROK_URL –≤ —Ñ–∞–π–ª–µ src/run_local_ngrok.py")
            raise ValueError("NGROK_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ ngrok
        webhook_url = f"{NGROK_URL}/webhook"
        await bot.set_webhook(webhook_url)
        logger.info(f"üîå –õ–æ–∫–∞–ª—å–Ω—ã–π webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")

        # –¢–∞–∫–∂–µ –ø–æ–∫–∞–∂–µ–º Senler webhook URL
        senler_webhook = f"{NGROK_URL}/senler/webhook"
        logger.info(f"üì° Senler webhook –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: {senler_webhook}")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞: {e}")
        raise


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º webhook —Ä–µ–∂–∏–º–µ"""
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    with open("config/constants.json", "r", encoding="utf-8") as json_file:
        MESSAGES.update(json.load(json_file))

    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Mind Style Bot –¥–ª—è –õ–û–ö–ê–õ–¨–ù–û–ì–û —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å ngrok")
    logger.info("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    logger.info("   1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ ngrok –∑–∞–ø—É—â–µ–Ω: ngrok http 8000")
    logger.info("   2. –û–±–Ω–æ–≤–∏—Ç–µ NGROK_URL –≤ —Ñ–∞–π–ª–µ src/run_local_ngrok.py")
    logger.info("   3. –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Senler –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ POST –Ω–∞ /senler/webhook")

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram –±–æ—Ç–∞ –¥–ª—è webhook
    await setup_local_webhook_bot()

    # –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä –≤ —Ç–æ–º –∂–µ –ø—Ä–æ—Ü–µ—Å—Å–µ
    try:
        logger.info("üåê –ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        logger.info(f"üì° API docs: http://localhost:8000/docs")
        logger.info(f"üåç –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: {NGROK_URL}/docs")

        config = uvicorn.Config(app, host="0.0.0.0", port=8000, log_level="info" if DEBUG else "warning")
        server = uvicorn.Server(config)
        await server.serve()

    except KeyboardInterrupt:
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    finally:
        logger.info("üîå –£–¥–∞–ª–µ–Ω–∏–µ webhook...")
        await bot.delete_webhook()
        logger.info("üîå –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
        await link_scheduler.stop()
        logger.info("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üõë –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
