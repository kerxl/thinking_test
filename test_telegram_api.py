#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram Bot API
"""

import asyncio
import httpx
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.settings import BOT_TOKEN

async def test_telegram_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram Bot API"""
    
    api_url = f"https://api.telegram.org/bot{BOT_TOKEN}"
    
    print(f"üîë –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω: {BOT_TOKEN[:10]}...")
    print(f"üåê API URL: {api_url}")
    
    timeout = httpx.Timeout(30.0, connect=10.0)
    
    try:
        async with httpx.AsyncClient(timeout=timeout) as client:
            print("\nüì° –¢–µ—Å—Ç 1: getMe (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ)")
            response = await client.get(f"{api_url}/getMe")
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: {data['result']['first_name']} (@{data['result']['username']})")
                print(f"ü§ñ ID –±–æ—Ç–∞: {data['result']['id']}")
                print(f"üìã –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {data['result']['can_read_all_group_messages']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ getMe: HTTP {response.status_code}")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                return False
            
            print("\nüì° –¢–µ—Å—Ç 2: getWebhookInfo (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook)")
            response = await client.get(f"{api_url}/getWebhookInfo")
            
            if response.status_code == 200:
                data = response.json()
                webhook_url = data['result'].get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
                pending_updates = data['result'].get('pending_update_count', 0)
                print(f"üîó –¢–µ–∫—É—â–∏–π webhook: {webhook_url}")
                print(f"üì¨ –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {pending_updates}")
                
                if pending_updates > 0:
                    print(f"‚ö†Ô∏è  –ï—Å—Ç—å –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {pending_updates}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ getWebhookInfo: HTTP {response.status_code}")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                
            print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            return True
            
    except httpx.ConnectTimeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º")
        print("   - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Telegram API –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º")
        print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        return False
    except httpx.ReadTimeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç —á—Ç–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç Telegram API")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram Bot API\n")
    result = asyncio.run(test_telegram_api())
    
    if result:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° Telegram API –¥–æ—Å—Ç—É–ø–µ–Ω –∏ —Ç–æ–∫–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
    else:
        print("\n‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã!")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        sys.exit(1)