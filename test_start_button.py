#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç" - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–ø—Ä—è–º—É—é
"""

import asyncio
import sys
import os
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.bot.globals import bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config.settings import ADMIN_USER_ID

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_start_button():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É '–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç'"""
    
    user_id = ADMIN_USER_ID
    logger.info(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ '–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    try:
        message_text = (
            "üéØ <b>–¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ '–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç'</b>\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞."
        )

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text="üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç", 
                callback_data="start_personal_data"
            )]
        ])
        
        logger.info("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π...")
        
        await bot.send_message(
            chat_id=user_id,
            text=message_text,
            parse_mode="HTML",
            reply_markup=markup
        )
        
        logger.info("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        logger.info("üí° –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        import traceback
        logger.error(f"üêõ Traceback: {traceback.format_exc()}")

if __name__ == "__main__":
    asyncio.run(test_start_button())