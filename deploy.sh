#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è Mind Style Bot

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π Mind Style Bot..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç –∏–º–µ–Ω–∏ root
if [ "$EUID" -eq 0 ]; then
    error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root!"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if [ -z "$BOT_TOKEN" ]; then
    warn "BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –≤ .env —Ñ–∞–π–ª–µ"
fi

if [ -z "$DOMAIN" ]; then
    read -p "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è –¥–µ–ø–ª–æ—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, bot.example.com): " DOMAIN
    if [ -z "$DOMAIN" ]; then
        error "–î–æ–º–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL –∏ webhook"
    fi
fi

if [ -z "$DB_PASSWORD" ]; then
    read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL: " DB_PASSWORD
    echo
    if [ -z "$DB_PASSWORD" ]; then
        error "–ü–∞—Ä–æ–ª—å –¥–ª—è –ë–î –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"
    fi
fi

log "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
log "  –î–æ–º–µ–Ω: $DOMAIN"
log "  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
log "  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

if ! command -v python3 &> /dev/null; then
    error "Python 3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

if ! command -v git &> /dev/null; then
    error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

PYTHON_VERSION=$(python3 --version | cut -d' ' -f2 | cut -d'.' -f1,2)
if (( $(echo "$PYTHON_VERSION < 3.8" | bc -l) )); then
    error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PYTHON_VERSION"
fi

log "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
log "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [ ! -d "venv" ]; then
    python3 -m venv venv
    log "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
else
    log "‚ÑπÔ∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt
log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [ ! -f ".env" ]; then
    cat > .env << EOF
# Telegram Bot Token (–ø–æ–ª—É—á–∏—Ç—å —É @BotFather)
BOT_TOKEN=${BOT_TOKEN:-your_bot_token_here}

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=postgresql+asyncpg://mindbot:${DB_PASSWORD}@localhost/mind_style

# –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DEBUG=False
ADMIN_USER_ID=${ADMIN_USER_ID:-0}

# API —Å–µ—Ä–≤–µ—Ä –¥–ª—è Senler
API_HOST=0.0.0.0
API_PORT=8000
WEBHOOK_URL=https://${DOMAIN}/senler/webhook
EOF
    chmod 600 .env
    log "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
else
    log "‚ÑπÔ∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º WEBHOOK_URL..."
    sed -i "s|WEBHOOK_URL=.*|WEBHOOK_URL=https://${DOMAIN}/senler/webhook|g" .env
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..."
if sudo -u postgres psql -c '\q' 2>/dev/null; then
    log "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    error "PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω."
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ë–î –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sudo -u postgres psql -c "CREATE DATABASE mind_style;" 2>/dev/null || log "‚ÑπÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö mind_style —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
sudo -u postgres psql -c "CREATE USER mindbot WITH PASSWORD '$DB_PASSWORD';" 2>/dev/null || log "‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å mindbot —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE mind_style TO mindbot;" 2>/dev/null

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
log "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
make db-init
make db-senler
log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
log "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
sudo tee /etc/systemd/system/mindbot-api.service > /dev/null << EOF
[Unit]
Description=Mind Style Bot with API
After=network.target postgresql.service

[Service]
Type=simple
User=$(whoami)
WorkingDirectory=$(pwd)
Environment=PATH=$(pwd)/venv/bin
ExecStart=$(pwd)/venv/bin/python src/run_with_api.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable mindbot-api
log "‚úÖ Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
log "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
sudo tee /etc/nginx/sites-available/mindbot > /dev/null << EOF
server {
    listen 80;
    server_name $DOMAIN;
    return 301 https://\$server_name\$request_uri;
}

server {
    listen 443 ssl http2;
    server_name $DOMAIN;

    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ certbot
    
    # Proxy –¥–ª—è API —Å–µ—Ä–≤–µ—Ä–∞
    location /senler/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    # Health check
    location /health {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
    }

    # API docs (optional)
    location /docs {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
    }

    # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    location / {
        return 200 'Mind Style Bot API is running';
        add_header Content-Type text/plain;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∞–π—Ç–∞ –≤ Nginx
sudo ln -sf /etc/nginx/sites-available/mindbot /etc/nginx/sites-enabled/
sudo nginx -t
log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx —Å–æ–∑–¥–∞–Ω–∞"

# –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
log "–ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
if command -v certbot &> /dev/null; then
    sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos --email admin@$DOMAIN
    log "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω"
else
    warn "Certbot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤—Ä—É—á–Ω—É—é."
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±
log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±..."
sudo systemctl restart nginx
sudo systemctl start mindbot-api
log "‚úÖ –°–ª—É–∂–±—ã –∑–∞–ø—É—â–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–ø–ª–æ—è..."
sleep 5

if sudo systemctl is-active --quiet mindbot-api; then
    log "‚úÖ Mind Style Bot API –∑–∞–ø—É—â–µ–Ω"
else
    error "‚ùå Mind Style Bot API –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo journalctl -u mindbot-api"
fi

if sudo systemctl is-active --quiet nginx; then
    log "‚úÖ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "‚ùå Nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
log "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
if curl -f https://$DOMAIN/health &> /dev/null; then
    log "‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ HTTPS"
elif curl -f http://$DOMAIN:8000/health &> /dev/null; then
    warn "‚ö†Ô∏è  API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ SSL –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    warn "‚ö†Ô∏è  API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é."
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
cat > check_status.sh << 'EOF'
#!/bin/bash
echo "=== Mind Style Bot Status ==="
echo "Service status:"
sudo systemctl status mindbot-api --no-pager -l
echo -e "\nAPI Health:"
curl -s https://$(grep WEBHOOK_URL .env | cut -d'=' -f2 | cut -d'/' -f3)/health | jq . || echo "API not responding"
echo -e "\nLast 10 log entries:"
sudo journalctl -u mindbot-api -n 10 --no-pager
EOF

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
cat > update_bot.sh << 'EOF'
#!/bin/bash
echo "Updating Mind Style Bot..."
git pull origin main
source venv/bin/activate
pip install -r requirements.txt
sudo systemctl restart mindbot-api
echo "Bot updated successfully!"
echo "Status:"
sleep 2
sudo systemctl status mindbot-api --no-pager -l
EOF

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
cat > view_logs.sh << 'EOF'
#!/bin/bash
echo "Mind Style Bot Logs (press Ctrl+C to exit):"
sudo journalctl -u mindbot-api -f
EOF

chmod +x check_status.sh update_bot.sh view_logs.sh

log "‚úÖ –°–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã:"
log "  ./check_status.sh - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"
log "  ./update_bot.sh   - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞"
log "  ./view_logs.sh    - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo
echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–ª–æ–µ:"
echo "  –î–æ–º–µ–Ω: https://$DOMAIN"
echo "  Webhook URL: https://$DOMAIN/senler/webhook"
echo "  Health Check: https://$DOMAIN/health"
echo "  API Docs: https://$DOMAIN/docs"
echo
echo "üîß –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:"
echo "  1. –û–±–Ω–æ–≤–∏—Ç–µ BOT_TOKEN –≤ —Ñ–∞–π–ª–µ .env"
echo "  2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å: sudo systemctl restart mindbot-api"
echo "  3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Senler –≤–æ—Ä–æ–Ω–∫—É —Å webhook URL –≤—ã—à–µ"
echo "  4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é"
echo
echo "üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –°—Ç–∞—Ç—É—Å:    ./check_status.sh"
echo "  –õ–æ–≥–∏:      ./view_logs.sh"
echo "  –û–±–Ω–æ–≤–∏—Ç—å:  ./update_bot.sh"
echo "  –†–µ—Å—Ç–∞—Ä—Ç:   sudo systemctl restart mindbot-api"
echo
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "  –ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: DEPLOYMENT_GUIDE.md"
echo "  Senler –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: SENLER_INTEGRATION.md"

log "üöÄ Mind Style Bot –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"