#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—à–µ–≥–æ Telegram User ID
"""

import asyncio
import httpx
from config.settings import BOT_TOKEN


async def get_bot_updates():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è User ID"""
    
    try:
        async with httpx.AsyncClient() as client:
            telegram_api_url = f"https://api.telegram.org/bot{BOT_TOKEN}/getUpdates"
            
            response = await client.get(telegram_api_url, timeout=10.0)
            
            if response.status_code == 200:
                data = response.json()
                
                if data.get("result"):
                    print("üì± –ù–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
                    print("=" * 50)
                    
                    user_ids = set()
                    for update in data["result"]:
                        if "message" in update and "from" in update["message"]:
                            user = update["message"]["from"]
                            user_id = user["id"]
                            username = user.get("username", "–ù–µ—Ç username")
                            first_name = user.get("first_name", "")
                            
                            if user_id not in user_ids:
                                user_ids.add(user_id)
                                print(f"üë§ User ID: {user_id}")
                                print(f"   –ò–º—è: {first_name}")
                                print(f"   Username: @{username}")
                                print(f"   –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: python test_senler_webhook.py {user_id}")
                                print("-" * 30)
                    
                    if not user_ids:
                        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π")
                        print("üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
                        
                else:
                    print("‚ùå –ù–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞")
                    print("üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
                    
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.json()}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


async def main():
    print("üîç –ü–æ–∏—Å–∫ –≤–∞—à–µ–≥–æ Telegram User ID...")
    print("üí° –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ—Ç—Å—è - —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /start")
    print("=" * 50)
    
    await get_bot_updates()


if __name__ == "__main__":
    asyncio.run(main())